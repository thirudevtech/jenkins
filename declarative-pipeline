declrative-pipeline :
---------------------

pipeline {

   agent any

	# THE PARAMETERS DIRECTIVE PROVIDES A LIST OF PARAMETERS THAT A USER SHOULD PROVIDE WHEN TRIGGERING THE PIPELINE.
	parameters {
		string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
    }


	# A SECTION DEFINING TOOLS TO AUTO-INSTALL AND PUT ON THE PATH. THIS IS IGNORED IF AGENT NONE IS SPECIFIED.
	tools {
		maven 'apache-maven-3.0.1'
	}


	# THE TRIGGERS DIRECTIVE DEFINES THE AUTOMATED WAYS IN WHICH THE PIPELINE SHOULD BE RE-TRIGGERED.
	triggers {
		cron('H */4 * * 1-5')
	}

	environment {
		CC = 'clang'
	}


	# THE STAGES SECTION SPECIFIES ONE OR MORE STAGE`S TO BE EXECUTED SEQUENTIALLY IN EACH CELL.
    stages {

		# THE STAGE DIRECTIVE GOES IN THE STAGES SECTION AND SHOULD CONTAIN A STEPS SECTION, AN OPTIONAL AGENT SECTION, OR OTHER STAGE-SPECIFIC DIRECTIVES
        stage('execute-shell-command') {

            steps {
                echo 'Hello World'
            }
        }

		stage('execute-shell-command') {

            steps {
                sh 'echo "single line shell script execution $variable"'
            }
        }

		stage('when condition') {
            when {
                allOf {
                    branch 'production'
                    environment name: 'DEPLOY_TO', value: 'production'
                }
            }
            steps {
                echo 'Deploying'
            }
        }


		# STAGES IN DECLARATIVE PIPELINE MAY HAVE A STAGES SECTION CONTAINING A LIST OF NESTED STAGES TO BE RUN IN SEQUENTIAL ORDER.
		stage('Sequential') {
            agent {
                label 'for-sequential'
            }
            environment {
                FOR_SEQUENTIAL = "some-value"
            }
            stages {
                stage('In Sequential 1') {
                    steps {
                        echo "In Sequential 1"
                    }
                }
                stage('In Sequential 2') {
                    steps {
                        echo "In Sequential 2"
                    }
                }
			}
		}

		# STAGES IN DECLARATIVE PIPELINE MAY HAVE A PARALLEL SECTION CONTAINING A LIST OF NESTED STAGES TO BE RUN IN PARALLEL.
		stage('Parallel Stage') {
            when {
                branch 'master'
            }
            failFast true
            parallel {
                stage('Branch A') {
                    agent {
                        label "for-branch-a"
                    }
                    steps {
                        echo "On Branch A"
                    }
                }
                stage('Branch B') {
                    agent {
                        label "for-branch-b"
                    }
                    steps {
                        echo "On Branch B"
                    }
                }
			}
		}

		stage('executes script') {
            steps {
                echo 'Hello World'

                script {
                    def browsers = ['chrome', 'firefox']
                    for (int i = 0; i < browsers.size(); ++i) {
                        echo "Testing the ${browsers[i]} browser"
                    }
                }
            }
        }

    }


	# THE POST SECTION DEFINES ONE OR MORE ADDITIONAL STEPS THAT ARE RUN UPON THE COMPLETION OF A PIPELINE’S OR STAGE’S RUN (DEPENDING ON THE LOCATION OF THE POST SECTION WITHIN THE PIPELINE).
    post {
        always {
            echo 'I will always say Hello again!'
        }
    }

}
